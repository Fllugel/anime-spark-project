try:
    from pyspark.sql import SparkSession
    from pyspark.sql.types import StructType, StructField, IntegerType, StringType, DoubleType, ArrayType
    SPARK_AVAILABLE = True
except ImportError:
    SPARK_AVAILABLE = False
    print("‚ö†Ô∏è  PySpark –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π –ª–æ–∫–∞–ª—å–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é pandas —è–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É")

import pandas as pd
from data_extraction import create_anime_dataframe, validate_dataframe

def main():
    if SPARK_AVAILABLE:
        print("üöÄ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é PySpark")
        # –°—Ç–≤–æ—Ä—ñ—Ç—å SparkSession
        spark = SparkSession.builder \
            .appName("AnimeDataExtraction") \
            .getOrCreate()

        try:
            # –ö—Ä–æ–∫ 1: –°—Ç–≤–æ—Ä—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ —Å—Ö–µ–º–∏ –¥–ª—è –Ω–∞–±–æ—Ä—É –¥–∞–Ω–∏—Ö
            print("–ö—Ä–æ–∫ 1: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º –¥–ª—è –Ω–∞–±–æ—Ä—É –¥–∞–Ω–∏—Ö")

            # –ö—Ä–æ–∫ 2: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ —Å—Ö–µ–º–∏, —Å—Ç–≤–æ—Ä—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ DataFrame
            print("–ö—Ä–æ–∫ 2: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è DataFrame –∑ CSV —Ñ–∞–π–ª—É")
            anime_df = create_anime_dataframe(spark, "data/final_animedataset.csv")

            # –ö—Ä–æ–∫ 3: –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –∫–æ—Ä–µ–∫—Ç–Ω–æ –≤—Å–µ –∑—á–∏—Ç–∞–ª–æ—Å—å
            print("–ö—Ä–æ–∫ 3: –í–∞–ª—ñ–¥–∞—Ü—ñ—è DataFrame")
            validate_dataframe(anime_df)

            print("\n‚úÖ –í—Å—ñ –∫—Ä–æ–∫–∏ –≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")

        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}")
        finally:
            spark.stop()
    else:
        print("üöÄ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é pandas (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ PySpark)")
        try:
            # –ö—Ä–æ–∫ 1: –°—Ç–≤–æ—Ä—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ —Å—Ö–µ–º–∏ –¥–ª—è –Ω–∞–±–æ—Ä—É –¥–∞–Ω–∏—Ö
            print("–ö—Ä–æ–∫ 1: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ö–µ–º –¥–ª—è –Ω–∞–±–æ—Ä—É –¥–∞–Ω–∏—Ö")

            # –ö—Ä–æ–∫ 2: –°—Ç–≤–æ—Ä—ñ—Ç—å DataFrame –∑ CSV —Ñ–∞–π–ª—É
            print("–ö—Ä–æ–∫ 2: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è DataFrame –∑ CSV —Ñ–∞–π–ª—É")
            anime_df = create_anime_dataframe(None, "data/final_animedataset.csv")

            # –ö—Ä–æ–∫ 3: –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —á–∏ –∫–æ—Ä–µ–∫—Ç–Ω–æ –≤—Å–µ –∑—á–∏—Ç–∞–ª–æ—Å—å
            print("–ö—Ä–æ–∫ 3: –í–∞–ª—ñ–¥–∞—Ü—ñ—è DataFrame")
            validate_dataframe(anime_df)

            print("\n‚úÖ –í—Å—ñ –∫—Ä–æ–∫–∏ –≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")

        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {str(e)}")

if __name__ == "__main__":
    main()
